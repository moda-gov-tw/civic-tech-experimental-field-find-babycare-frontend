export function mockDataFormatter(mockData) {
  return mockData.map((d, idx) => {
    const id = d.id;
    const {
      accepted_date: acceptedDate,
      age,
      applicant_id: applicantId,
      applicant_lives_with_infant: applicantLivesWithInfant,
      applicant_mailing_address: applicantMailingAddress,
      applicant_name: applicantName,
      applicant_phone_number: applicantPhoneNumber,
      applicant_resident_address: applicantResidentAddress,
      application_status: applicationStatus,
      birthdate,
      daycare_name: daycareName,
      enroll_date: enrollDate,
      enrollment_status: enrollmentStatus,
      forfeit_date: forfeitDate,
      forfeit_reason: forfeitReason,
      graduated_date: graduatedDate,
      graduated_reason: graduatedReason,
      identities,
      infant_age: infantAge,
      infant_birthdate: infantBirthdate,
      infant_medical_condition: infantMedicalCondition,
      infant_name: infantName,
      infant_resident_address: infantResidentAddress,
      infant_roc_number: infantRocNumber,
      infant_sex: infantSex,
      infant_unique_id: infantId,
      register_deadline: registerDeadline,
      relationship_with_infant: relationshipWithInfant,
      selected_daycare: selectedDaycare,
      submission_date: submissionDate,
    } = d.fields;

    return {
      acceptedDate,
      age,
      applicantId,
      applicantLivesWithInfant,
      applicantMailingAddress,
      applicantName,
      applicantPhoneNumber,
      applicantResidentAddress,
      applicationStatus,
      birthdate,
      daycareName,
      enrollDate,
      enrollmentStatus,
      forfeitDate,
      forfeitReason,
      graduatedDate,
      graduatedReason,
      id,
      identities,
      infantAge,
      infantBirthdate,
      infantId,
      infantMedicalCondition,
      infantName,
      infantResidentAddress,
      infantRocNumber,
      infantSex,
      order: idx + 1,
      registerDeadline,
      relationshipWithInfant,
      selectedDaycare,
      submissionDate,
    };
  });
}
